# Generated by Django 5.1.6 on 2025-04-14 12:56

import django.core.validators
import django.db.models.deletion
import pmc_api.utils
import simple_history.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('pmc_api', '0066_historicalapplicantdetail'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalApplicantDocuments',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('document', models.TextField(max_length=100)),
                ('document_description', models.CharField(max_length=255)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('applicant', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pmc_api.applicantdetail')),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical applicant documents',
                'verbose_name_plural': 'historical applicant documentss',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalApplicantFee',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('fee_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_settled', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('reason', models.TextField(blank=True, null=True)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('applicant', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pmc_api.applicantdetail')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical applicant fee',
                'verbose_name_plural': 'historical applicant fees',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalApplicantFieldResponse',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('field_key', models.CharField(max_length=255)),
                ('response', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='Yes', max_length=3)),
                ('comment', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('applicant', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pmc_api.applicantdetail')),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical applicant field response',
                'verbose_name_plural': 'historical applicant field responses',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalApplicantManualFields',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('list_of_products', models.TextField(blank=True, null=True)),
                ('list_of_by_products', models.TextField(blank=True, null=True)),
                ('raw_material_imported', models.TextField(blank=True, null=True)),
                ('seller_name_if_raw_material_bought', models.CharField(blank=True, max_length=255, null=True)),
                ('self_import_details', models.TextField(blank=True, null=True)),
                ('raw_material_utilized', models.TextField(blank=True, null=True)),
                ('compliance_thickness_75', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, null=True)),
                ('valid_consent_permit_building_bylaws', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, null=True)),
                ('stockist_distributor_list', models.TextField(blank=True, null=True)),
                ('procurement_per_day', models.CharField(blank=True, help_text='Procurement in Kg per day', max_length=100, null=True)),
                ('no_of_workers', models.PositiveIntegerField(blank=True, null=True)),
                ('labor_dept_registration_status', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, null=True)),
                ('occupational_safety_and_health_facilities', models.TextField(blank=True, null=True)),
                ('adverse_environmental_impacts', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('applicant', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pmc_api.applicantdetail')),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical applicant manual fields',
                'verbose_name_plural': 'historical applicant manual fieldss',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalApplicationAssignment',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('assigned_group', models.CharField(choices=[('APPLICANT', 'APPLICANT'), ('LSO', 'LSO'), ('LSO1', 'LSO1'), ('LSO2', 'LSO2'), ('LSO3', 'LSO3'), ('LSM', 'LSM'), ('DO', 'DO'), ('LSM2', 'LSM'), ('TL', 'TL'), ('DEO', 'DEO'), ('DG', 'DG'), ('Download License', 'Download License')], max_length=100, null=True)),
                ('remarks', models.TextField(null=True)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('applicant', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pmc_api.applicantdetail')),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical application assignment',
                'verbose_name_plural': 'historical application assignments',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalApplicationSubmitted',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('applicant', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pmc_api.applicantdetail')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical application submitted',
                'verbose_name_plural': 'historical application submitteds',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalBusinessProfile',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('entity_type', models.CharField(choices=[('Individual', 'Individual'), ('Company', 'Company/Corporation/Partnership')], default='Individual', max_length=20)),
                ('tracking_number', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('ntn_strn_pra_no_individual', models.CharField(blank=True, max_length=20, null=True)),
                ('business_name', models.CharField(blank=True, max_length=255, null=True)),
                ('business_registration_type', models.CharField(blank=True, choices=[('sole_proprietorship', 'Sole Proprietorship'), ('aop', 'Association of Persons (AOP)'), ('public_ltd', 'Limited Company: Public Ltd'), ('private_ltd', 'Limited Company: Private Ltd'), ('single_member', 'Limited Company: Single Member')], max_length=50, null=True)),
                ('business_registration_no', models.CharField(blank=True, max_length=50, null=True)),
                ('ntn_strn_pra_no_company', models.CharField(blank=True, max_length=20, null=True)),
                ('working_days', models.IntegerField(blank=True, choices=[(5, 5), (6, 6), (7, 7)], default=5, help_text='working days in the week', null=True)),
                ('commencement_date', models.DateField(blank=True, help_text='Date since commencement of Business', null=True)),
                ('no_of_workers', models.IntegerField(blank=True, help_text='Number of workers (including contract labour)', null=True)),
                ('city_town_village', models.CharField(blank=True, help_text='Name of City/Town or Village', max_length=256, null=True)),
                ('postal_address', models.TextField(blank=True, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=10, null=True)),
                ('location_latitude', models.DecimalField(blank=True, decimal_places=6, help_text='Format: XX.XXXXXX, Range: 20.000000 to 40.000000, Unit: Decimal Degree', max_digits=9, null=True, validators=[pmc_api.utils.validate_latitude])),
                ('location_longitude', models.DecimalField(blank=True, decimal_places=6, help_text='Format: XX.XXXXXX, Range: 60.000000 to 80.000000,Unit: Decimal Degree', max_digits=9, null=True, validators=[pmc_api.utils.validate_longitude])),
                ('email', models.EmailField(blank=True, max_length=255, null=True)),
                ('mobile_operator', models.CharField(blank=True, choices=[('Mobilink', 'Mobilink'), ('Telenor', 'Telenor'), ('Ufone', 'Ufone'), ('Warid', 'Warid')], max_length=15, null=True)),
                ('mobile_no', models.CharField(blank=True, help_text='3001234567', max_length=10, null=True, validators=[django.core.validators.MinLengthValidator(10), django.core.validators.RegexValidator(message="Mobile number must be exactly 10 digits, e.g., '3001234567'.", regex='^\\d{10}$')])),
                ('phone_no', models.CharField(blank=True, help_text='042-12345678', max_length=12, null=True)),
                ('website_address', models.URLField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('applicant', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pmc_api.applicantdetail')),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('district', models.ForeignKey(blank=True, db_column='district_id', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pmc_api.tbldistricts', verbose_name='District')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('tehsil', models.ForeignKey(blank=True, db_column='tehsil_id', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pmc_api.tbltehsils', verbose_name='Tehsil')),
                ('updated_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical business profile',
                'verbose_name_plural': 'historical business profiles',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCollector',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('registration_required_for', models.JSONField(blank=True, help_text="Categories of Single Use Plastics (e.g., ['Carry bags', 'Packaging except food'])", null=True)),
                ('registration_required_for_other', models.JSONField(blank=True, help_text="Categories for Other Plastics (e.g., ['Plastic Utensils', 'PET Bottles'])", null=True)),
                ('selected_categories', models.JSONField(blank=True, help_text="Source of Disposal, with details for each category. Example: [{'category': 'Recycler', 'address': '123 Street Name'}, {'category': 'Landfill Site', 'address': '456 Another St'}]", null=True)),
                ('total_capacity_value', models.FloatField(blank=True, help_text='Collection in Kg per day', null=True)),
                ('number_of_vehicles', models.PositiveIntegerField(blank=True, help_text='Number of vehicles for collection', null=True)),
                ('number_of_persons', models.PositiveIntegerField(blank=True, help_text='Number of persons for collection', null=True)),
                ('registration_required_for_other_other_text', models.CharField(blank=True, max_length=1024, null=True)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('applicant', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pmc_api.applicantdetail')),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical collector',
                'verbose_name_plural': 'historical collectors',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalConsumer',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('registration_required_for', models.JSONField(blank=True, default=list)),
                ('registration_required_for_other', models.JSONField(blank=True, default=list)),
                ('plain_plastic_sheets_for_food_wrapping', models.JSONField(blank=True, default=list, null=True)),
                ('packaging_items', models.JSONField(blank=True, default=list, null=True)),
                ('consumption', models.CharField(blank=True, max_length=100, null=True)),
                ('provision_waste_disposal_bins', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=3)),
                ('no_of_waste_disposable_bins', models.PositiveIntegerField(blank=True, null=True)),
                ('segregated_plastics_handed_over_to_registered_recyclers', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=3)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('registration_required_for_other_other_text', models.CharField(blank=True, max_length=1024, null=True)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('applicant', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pmc_api.applicantdetail')),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical consumer',
                'verbose_name_plural': 'historical consumers',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDistrictPlasticCommitteeDocument',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('Notification', 'Notification'), ('Minutes of Meeting', 'Minutes of Meeting')], max_length=50)),
                ('title', models.CharField(blank=True, max_length=1024, null=True)),
                ('document', models.TextField(max_length=100)),
                ('uploaded_at', models.DateTimeField(blank=True, editable=False)),
                ('document_date', models.DateField(blank=True, null=True)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('district', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pmc_api.tbldistricts')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('uploaded_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical district plastic committee document',
                'verbose_name_plural': 'historical district plastic committee documents',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalExternalServiceToken',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('service_name', models.CharField(max_length=100)),
                ('access_token', models.TextField()),
                ('expires_at', models.DateTimeField()),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical external service token',
                'verbose_name_plural': 'historical external service tokens',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalInspectionReport',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('business_name', models.CharField(max_length=255)),
                ('business_type', models.CharField(max_length=50)),
                ('license_number', models.CharField(blank=True, max_length=50, null=True)),
                ('violation_found', models.JSONField(blank=True, null=True)),
                ('violation_type', models.JSONField(blank=True, null=True)),
                ('action_taken', models.JSONField(blank=True, null=True)),
                ('plastic_bags_confiscation', models.FloatField(blank=True, null=True)),
                ('confiscation_other_plastics', models.JSONField(blank=True, null=True)),
                ('total_confiscation', models.FloatField(blank=True, null=True)),
                ('other_single_use_items', models.JSONField(blank=True, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('inspection_date', models.DateField(blank=True, null=True)),
                ('fine_amount', models.FloatField(blank=True, null=True)),
                ('fine_recovery_status', models.CharField(blank=True, choices=[('Pending', 'Pending'), ('Partial', 'Partial'), ('Recovered', 'Recovered')], max_length=20, null=True)),
                ('fine_recovery_date', models.DateField(blank=True, null=True)),
                ('recovery_amount', models.FloatField(blank=True, null=True)),
                ('de_sealed_date', models.DateField(blank=True, null=True)),
                ('fine_recovery_breakup', models.JSONField(blank=True, null=True)),
                ('affidavit', models.TextField(blank=True, max_length=100, null=True)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('district', models.ForeignKey(blank=True, db_column='district_id', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pmc_api.tbldistricts', verbose_name='District')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical inspection report',
                'verbose_name_plural': 'historical inspection reports',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalLicense',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('license_for', models.CharField(default='producer', help_text='Type of license issued (e.g., Producer, Stockist, Distributor, etc.)', max_length=50, verbose_name='License For')),
                ('license_number', models.CharField(max_length=100, verbose_name='License Number')),
                ('license_duration', models.CharField(help_text="e.g., '3 Years'", max_length=50, verbose_name='License Duration')),
                ('owner_name', models.CharField(max_length=200, verbose_name='Owner’s Name')),
                ('business_name', models.CharField(max_length=200, verbose_name='Business Name')),
                ('types_of_plastics', models.CharField(help_text="e.g., 'ABC, DEF'", max_length=200, verbose_name='Types of Plastics')),
                ('particulars', models.CharField(help_text="e.g., 'ABC, DEF'", max_length=200, verbose_name='Particulars')),
                ('fee_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('address', models.CharField(max_length=300, verbose_name='Address')),
                ('date_of_issue', models.DateField(help_text="e.g., '10.01.2025'", verbose_name='Date of Issue')),
                ('applicant_id', models.IntegerField(help_text='Link this license to an applicant record', verbose_name='Applicant ID')),
                ('is_active', models.BooleanField(default=True, help_text='Indicates whether the license is active.', verbose_name='Is Active')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Created At')),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical license',
                'verbose_name_plural': 'historical licenses',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalProducer',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('tracking_number', models.CharField(blank=True, max_length=100, null=True)),
                ('registration_required_for', models.JSONField(blank=True, null=True)),
                ('registration_required_for_other', models.JSONField(blank=True, null=True)),
                ('plain_plastic_sheets_for_food_wrapping', models.JSONField(blank=True, null=True)),
                ('packaging_items', models.JSONField(blank=True, null=True)),
                ('number_of_machines', models.CharField(blank=True, max_length=255, null=True)),
                ('total_capacity_value', models.FloatField(blank=True, null=True)),
                ('date_of_setting_up', models.DateField(blank=True, null=True)),
                ('total_waste_generated_value', models.FloatField(blank=True, null=True)),
                ('has_waste_storage_capacity', models.CharField(blank=True, choices=[('Available', 'Available'), ('Not Available', 'Not Available')], max_length=255, null=True)),
                ('waste_disposal_provision', models.CharField(blank=True, choices=[('Available', 'Available'), ('Not Available', 'Not Available')], max_length=255, null=True)),
                ('registration_required_for_other_other_text', models.CharField(blank=True, max_length=1024, null=True)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('applicant', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pmc_api.applicantdetail')),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical producer',
                'verbose_name_plural': 'historical producers',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPSIDTracking',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('dept_transaction_id', models.CharField(max_length=50)),
                ('due_date', models.DateField()),
                ('expiry_date', models.DateTimeField()),
                ('amount_within_due_date', models.DecimalField(decimal_places=2, max_digits=10)),
                ('amount_after_due_date', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('consumer_name', models.CharField(max_length=255)),
                ('mobile_no', models.CharField(max_length=15)),
                ('cnic', models.CharField(max_length=13)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('district_id', models.IntegerField()),
                ('amount_bifurcation', models.JSONField()),
                ('consumer_number', models.CharField(blank=True, db_index=True, max_length=50, null=True, verbose_name='PSID')),
                ('status', models.CharField(default='Pending', max_length=50)),
                ('message', models.TextField(blank=True, null=True)),
                ('payment_status', models.CharField(default='UNPAID', max_length=10)),
                ('amount_paid', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('paid_date', models.DateField(blank=True, null=True)),
                ('paid_time', models.TimeField(blank=True, null=True)),
                ('bank_code', models.CharField(blank=True, max_length=10, null=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('applicant', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pmc_api.applicantdetail')),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical psid tracking',
                'verbose_name_plural': 'historical psid trackings',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalRecycler',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('selected_categories', models.JSONField(default=list)),
                ('plastic_waste_acquired_through', models.JSONField(blank=True, default=list)),
                ('has_adequate_pollution_control_systems', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=10)),
                ('pollution_control_details', models.TextField(blank=True, null=True)),
                ('registration_required_for_other_other_text', models.CharField(blank=True, max_length=1024, null=True)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('applicant', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pmc_api.applicantdetail')),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical recycler',
                'verbose_name_plural': 'historical recyclers',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalServiceConfiguration',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('service_name', models.CharField(db_index=True, max_length=100)),
                ('base_url', models.URLField(help_text='Base endpoint of the service')),
                ('auth_endpoint', models.URLField(help_text='Authentication endpoint')),
                ('generate_psid_endpoint', models.URLField(help_text='PSID generation endpoint')),
                ('transaction_status_endpoint', models.URLField(blank=True, help_text='Transaction Status endpoint', null=True)),
                ('client_id', models.CharField(max_length=200)),
                ('client_secret', models.CharField(max_length=500)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical service configuration',
                'verbose_name_plural': 'historical service configurations',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalUserProfile',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('district', models.ForeignKey(blank=True, db_column='district_id', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pmc_api.tbldistricts', verbose_name='District')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical user profile',
                'verbose_name_plural': 'historical user profiles',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
