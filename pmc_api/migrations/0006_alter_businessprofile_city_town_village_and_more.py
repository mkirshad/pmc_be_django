# Generated by Django 5.1.3 on 2024-11-25 11:38

import django.core.validators
import django.db.models.deletion
import pmc_api.utils
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('pmc_api', '0005_alter_applicantdetail_tracking_number'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterField(
            model_name='businessprofile',
            name='city_town_village',
            field=models.CharField(blank=True, help_text='Name of City/Town or Village', max_length=256, null=True),
        ),
        migrations.AlterField(
            model_name='businessprofile',
            name='district',
            field=models.ForeignKey(blank=True, db_column='district_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='pmc_api.tbldistricts', verbose_name='District'),
        ),
        migrations.AlterField(
            model_name='businessprofile',
            name='entity_type',
            field=models.CharField(choices=[('Individual', 'Individual'), ('Company', 'Company/Corporation/Partnership')], default='Individual', max_length=20),
        ),
        migrations.AlterField(
            model_name='businessprofile',
            name='location_latitude',
            field=models.DecimalField(blank=True, decimal_places=6, help_text='Format: XX.XXXXXX, Range: 20.000000 to 40.000000, Unit: Decimal Degree', max_digits=9, null=True, validators=[pmc_api.utils.validate_latitude]),
        ),
        migrations.AlterField(
            model_name='businessprofile',
            name='location_longitude',
            field=models.DecimalField(blank=True, decimal_places=6, help_text='Format: XX.XXXXXX, Range: 60.000000 to 80.000000,Unit: Decimal Degree', max_digits=9, null=True, validators=[pmc_api.utils.validate_longitude]),
        ),
        migrations.AlterField(
            model_name='businessprofile',
            name='mobile_no',
            field=models.CharField(blank=True, help_text='3001234567', max_length=10, null=True, validators=[django.core.validators.MinLengthValidator(10), django.core.validators.RegexValidator(message="Mobile number must be exactly 10 digits, e.g., '3001234567'.", regex='^\\d{10}$')]),
        ),
        migrations.AlterField(
            model_name='businessprofile',
            name='mobile_operator',
            field=models.CharField(blank=True, choices=[('Mobilink', 'Mobilink'), ('Telenor', 'Telenor'), ('Ufone', 'Ufone'), ('Warid', 'Warid')], max_length=15, null=True),
        ),
        migrations.AlterField(
            model_name='businessprofile',
            name='phone_no',
            field=models.CharField(blank=True, help_text='042-12345678', max_length=12, null=True),
        ),
        migrations.AlterField(
            model_name='businessprofile',
            name='postal_address',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='businessprofile',
            name='postal_code',
            field=models.CharField(blank=True, max_length=10, null=True),
        ),
        migrations.AlterField(
            model_name='businessprofile',
            name='tehsil',
            field=models.ForeignKey(blank=True, db_column='tehsil_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='pmc_api.tbltehsils', verbose_name='Tehsil'),
        ),
        migrations.AlterField(
            model_name='businessprofile',
            name='tracking_number',
            field=models.CharField(blank=True, max_length=100, null=True, unique=True),
        ),
        migrations.AlterField(
            model_name='businessprofile',
            name='working_days',
            field=models.IntegerField(blank=True, choices=[(5, 5), (6, 6), (7, 7)], default=5, help_text='working days in the week', null=True),
        ),
        migrations.CreateModel(
            name='Collector',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tracking_number', models.CharField(max_length=100, unique=True)),
                ('collection_source', models.JSONField(blank=True, null=True)),
                ('disposal_source', models.CharField(choices=[('Recycler', 'Recycler'), ('Landfill Site', 'Landfill Site'), ('Incinerators', 'Incinerators')], max_length=100)),
                ('average_annual_collection_val', models.FloatField(help_text='Weight (Kg/Day) - All Plastics')),
                ('average_annual_collection_unit', models.CharField(choices=[('kg_per_day', 'Kg/day'), ('ton_per_day', 'Ton/day')], max_length=100)),
                ('collection_vehicles', models.IntegerField(blank=True, null=True)),
                ('collection_persons', models.IntegerField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('applicant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='pmc_api.applicantdetail')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Consumer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tracking_number', models.CharField(max_length=100, unique=True)),
                ('annual_procurement_weight_val', models.FloatField(help_text='Kg/Day')),
                ('annual_procurement_weight_unit', models.CharField(choices=[('kg_per_day', 'Kg/day'), ('ton_per_day', 'Ton/day')], max_length=100)),
                ('annual_consumption_weight_val', models.FloatField(help_text='Kg/Day')),
                ('annual_consumption_weight_unit', models.CharField(choices=[('kg_per_day', 'Kg/day'), ('ton_per_day', 'Ton/day')], max_length=100)),
                ('waste_disposal_bins', models.BooleanField(default=False)),
                ('no_of_disposal_bins', models.IntegerField(blank=True, null=True)),
                ('segregation_at_source', models.BooleanField(default=False, help_text='if No in disposal bins')),
                ('registered_recycler', models.BooleanField(default=False, help_text='Whether the Segregated Plastics are being handed over to registered Re-cyclers')),
                ('license_no_recycler', models.CharField(blank=True, max_length=100, null=True)),
                ('registered_collector', models.BooleanField(default=False, help_text='Whether the Segregated Plastics are being handed over to registered Collector')),
                ('license_no_collector', models.CharField(blank=True, max_length=100, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('applicant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='pmc_api.applicantdetail')),
                ('primary_plastics', models.ManyToManyField(to='pmc_api.plasticitems')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Recycler',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tracking_number', models.CharField(max_length=100, unique=True)),
                ('business_commencement_date', models.DateField(blank=True, null=True)),
                ('no_of_workers', models.IntegerField(blank=True, null=True)),
                ('is_labor_department_reg', models.BooleanField(default=False)),
                ('registration_number', models.CharField(blank=True, max_length=100, null=True)),
                ('registration_date', models.DateField(blank=True, null=True)),
                ('registration_certificate', models.FileField(blank=True, null=True, upload_to='labor_dept/')),
                ('products_and_capacity', models.JSONField(help_text='List of products and installed capacity')),
                ('waste_generated', models.JSONField(help_text='Waste generation in processing plastic-waste (please list types and quantities)')),
                ('waste_disposal_details', models.JSONField()),
                ('plastic_waste_acquired', models.JSONField()),
                ('safety_and_health_aspects', models.TextField(blank=True, null=True)),
                ('pollution_control_system', models.BooleanField(default=False)),
                ('pollution_control_detail', models.TextField(blank=True, null=True)),
                ('impact_on_environment', models.BooleanField(default=False, help_text='Whether conditions exist or are likely to exist of the material being handled or processed posing adverse immediate or delayed impacts on the environment.')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('applicant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='pmc_api.applicantdetail')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
