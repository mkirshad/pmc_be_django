# Generated by Django 5.1.6 on 2025-04-14 11:42

import django.core.validators
import django.db.models.deletion
import pmc_api.models
import simple_history.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('pmc_api', '0065_districtsnew_eecclubs_auditlog'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalApplicantDetail',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('registration_for', models.CharField(choices=[('Producer', 'Producer'), ('Consumer', 'Consumer'), ('Recycler', 'Recycler'), ('Collector', 'Collector')], max_length=10, null=True)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('applicant_designation', models.CharField(blank=True, max_length=255, null=True)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Rather not say', 'Rather not say')], max_length=100)),
                ('cnic', models.CharField(help_text='XXXXX-XXXXXXX-X', max_length=15, validators=[django.core.validators.MinLengthValidator(15), django.core.validators.RegexValidator(message='CNIC must be in the format XXXXX-XXXXXXX-X.', regex='^\\d{5}-\\d{7}-\\d{1}$')])),
                ('email', models.EmailField(blank=True, max_length=255, null=True)),
                ('mobile_operator', models.CharField(blank=True, choices=[('Mobilink', 'Mobilink'), ('Telenor', 'Telenor'), ('Ufone', 'Ufone'), ('Warid', 'Warid')], max_length=15, null=True)),
                ('mobile_no', models.CharField(help_text='3001234567', max_length=10, validators=[django.core.validators.MinLengthValidator(10), django.core.validators.RegexValidator(message="Mobile number must be exactly 10 digits, e.g., '3001234567'.", regex='^\\d{10}$')])),
                ('application_status', models.CharField(choices=[('Created', 'Created'), ('Fee Challan', 'Fee Challan'), ('Submitted', 'Submitted'), ('In Review', 'In Review'), ('Approved', 'Approved'), ('Rejected', 'Rejected'), ('In Process', 'In Process'), ('Completed', 'Completed')], default='Created', max_length=20)),
                ('tracking_number', models.CharField(max_length=100, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('assigned_group', models.CharField(choices=[('APPLICANT', 'APPLICANT'), ('LSO', 'LSO'), ('LSO1', 'LSO1'), ('LSO2', 'LSO2'), ('LSO3', 'LSO3'), ('LSM', 'LSM'), ('DO', 'DO'), ('LSM2', 'LSM'), ('TL', 'TL'), ('DEO', 'DEO'), ('DG', 'DG'), ('Download License', 'Download License')], max_length=100, null=True)),
                ('tracking_hash', models.CharField(default=pmc_api.models.default_value_uuid, editable=False, max_length=36)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical applicant detail',
                'verbose_name_plural': 'historical applicant details',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
